
enum ReservationsStatusEnum {
  OPEN
  ACTIVE
  CLOSED
}

type Reservations @aws_api_key @aws_iam {
  id: ID!
  customersID: ID!
  pickup_date: AWSDate
  return_date: AWSDate
  pickup_location: String
  status: String
  car: String
  price: Float
  deposit: Float
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Candidate @aws_api_key @aws_iam {
  id: ID!
  name: String!
  email: AWSEmail!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type ToDo @aws_api_key @aws_iam {
  id: ID!
  name: String
  description: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Fees @aws_api_key @aws_iam {
  id: ID!
  deposit: Float
  carsID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Prices @aws_api_key @aws_iam {
  id: ID!
  rate_1: Float
  rate_3: Float
  rate_6: Float
  rate_12: Float
  rate_18: Float
  rate_24: Float
  carsID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type InsurancePackages @aws_api_key @aws_iam {
  id: ID!
  description: String
  carsID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type KMPackages @aws_api_key @aws_iam {
  id: ID!
  description: Int
  carsID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Classes @aws_api_key @aws_iam {
  id: ID!
  description: String
  suppliersID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Suppliers @aws_api_key @aws_iam {
  id: ID!
  description: String
  SuppliersClasses(filter: ModelClassesFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelClassesConnection
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

enum FuelEnum {
  PETROL
  DIESEL
}

enum TransmissionEnum {
  MANUAL
  AUTO
}

type Cars @aws_api_key @aws_iam {
  id: ID!
  Make: String
  Model: String
  Variant: String
  Year: String
  Transmission: TransmissionEnum
  Fuel: FuelEnum
  Seats: Int
  CarsKMPackages(filter: ModelKMPackagesFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelKMPackagesConnection
  CarsInsurancePackages(filter: ModelInsurancePackagesFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelInsurancePackagesConnection
  CarsClasses: Classes
  CarsPrices(filter: ModelPricesFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelPricesConnection
  CarsFees(filter: ModelFeesFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelFeesConnection
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  carsCarsClassesId: ID
}

enum DocumentTypeEnum {
  SA_ID
  PASSPORT
  DRIVERS_LICENCE
  PROOF_OF_ADDRESS
  BANK_STATEMENTS
}

type Documents @aws_api_key @aws_iam {
  id: ID!
  file_name: String
  document_type: DocumentTypeEnum
  customersID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

enum ProvincesEnum {
  EASTERN_CAPE
  FREESTATE
  GAUTENG
  KWAZULU_NATAL
  LIMPOPO
  MPUMALANGA
  NORTHERN_CAPE
  NORTH_WEST
  WESTERN_CAPE
}

type Addresses @aws_api_key @aws_iam {
  id: ID!
  street1: String
  street2: String
  city: String
  suburb: String
  province: ProvincesEnum
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

enum StatusEnum {
  APPROVED
  DECLINED
}

type Customers @aws_api_key @aws_iam {
  id: ID!
  first_name: String
  last_name: String
  email: AWSEmail
  phone: Int
  id_number: String
  drivers_licence: String
  CustomersDocuments(filter: ModelDocumentsFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelDocumentsConnection
  CustomersAddresses: Addresses
  salary: Float
  status: StatusEnum
  comments: String
  CustomerReservations(filter: ModelReservationsFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelReservationsConnection
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  customersCustomersAddressesId: ID
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelReservationsConnection @aws_api_key @aws_iam {
  items: [Reservations]!
  nextToken: String
}

input ModelReservationsFilterInput {
  id: ModelIDInput
  customersID: ModelIDInput
  pickup_date: ModelStringInput
  return_date: ModelStringInput
  pickup_location: ModelStringInput
  status: ModelStringInput
  car: ModelStringInput
  price: ModelFloatInput
  deposit: ModelFloatInput
  and: [ModelReservationsFilterInput]
  or: [ModelReservationsFilterInput]
  not: ModelReservationsFilterInput
}

type Query {
  getCandidate(id: ID!): Candidate
  listCandidates(filter: ModelCandidateFilterInput, limit: Int, nextToken: String): ModelCandidateConnection
  getReservations(id: ID!): Reservations @aws_api_key @aws_iam
  listReservations(filter: ModelReservationsFilterInput, limit: Int, nextToken: String): ModelReservationsConnection @aws_api_key @aws_iam
  reservationsByCustomersID(customersID: ID!, sortDirection: ModelSortDirection, filter: ModelReservationsFilterInput, limit: Int, nextToken: String): ModelReservationsConnection @aws_api_key @aws_iam
  getToDo(id: ID!): ToDo @aws_api_key @aws_iam
  listToDos(filter: ModelToDoFilterInput, limit: Int, nextToken: String): ModelToDoConnection @aws_api_key @aws_iam
  getFees(id: ID!): Fees @aws_api_key @aws_iam
  listFees(filter: ModelFeesFilterInput, limit: Int, nextToken: String): ModelFeesConnection @aws_api_key @aws_iam
  feesByCarsID(carsID: ID!, sortDirection: ModelSortDirection, filter: ModelFeesFilterInput, limit: Int, nextToken: String): ModelFeesConnection @aws_api_key @aws_iam
  getPrices(id: ID!): Prices @aws_api_key @aws_iam
  listPrices(filter: ModelPricesFilterInput, limit: Int, nextToken: String): ModelPricesConnection @aws_api_key @aws_iam
  pricesByCarsID(carsID: ID!, sortDirection: ModelSortDirection, filter: ModelPricesFilterInput, limit: Int, nextToken: String): ModelPricesConnection @aws_api_key @aws_iam
  getInsurancePackages(id: ID!): InsurancePackages @aws_api_key @aws_iam
  listInsurancePackages(filter: ModelInsurancePackagesFilterInput, limit: Int, nextToken: String): ModelInsurancePackagesConnection @aws_api_key @aws_iam
  insurancePackagesByCarsID(carsID: ID!, sortDirection: ModelSortDirection, filter: ModelInsurancePackagesFilterInput, limit: Int, nextToken: String): ModelInsurancePackagesConnection @aws_api_key @aws_iam
  getKMPackages(id: ID!): KMPackages @aws_api_key @aws_iam
  listKMPackages(filter: ModelKMPackagesFilterInput, limit: Int, nextToken: String): ModelKMPackagesConnection @aws_api_key @aws_iam
  kMPackagesByCarsID(carsID: ID!, sortDirection: ModelSortDirection, filter: ModelKMPackagesFilterInput, limit: Int, nextToken: String): ModelKMPackagesConnection @aws_api_key @aws_iam
  getClasses(id: ID!): Classes @aws_api_key @aws_iam
  listClasses(filter: ModelClassesFilterInput, limit: Int, nextToken: String): ModelClassesConnection @aws_api_key @aws_iam
  classesBySuppliersID(suppliersID: ID!, sortDirection: ModelSortDirection, filter: ModelClassesFilterInput, limit: Int, nextToken: String): ModelClassesConnection @aws_api_key @aws_iam
  getSuppliers(id: ID!): Suppliers @aws_api_key @aws_iam
  listSuppliers(filter: ModelSuppliersFilterInput, limit: Int, nextToken: String): ModelSuppliersConnection @aws_api_key @aws_iam
  getCars(id: ID!): Cars @aws_api_key @aws_iam
  listCars(filter: ModelCarsFilterInput, limit: Int, nextToken: String): ModelCarsConnection @aws_api_key @aws_iam
  getDocuments(id: ID!): Documents @aws_api_key @aws_iam
  listDocuments(filter: ModelDocumentsFilterInput, limit: Int, nextToken: String): ModelDocumentsConnection @aws_api_key @aws_iam
  documentsByCustomersID(customersID: ID!, sortDirection: ModelSortDirection, filter: ModelDocumentsFilterInput, limit: Int, nextToken: String): ModelDocumentsConnection @aws_api_key @aws_iam
  getAddresses(id: ID!): Addresses @aws_api_key @aws_iam
  listAddresses(filter: ModelAddressesFilterInput, limit: Int, nextToken: String): ModelAddressesConnection @aws_api_key @aws_iam
  getCustomers(id: ID!): Customers @aws_api_key @aws_iam
  listCustomers(filter: ModelCustomersFilterInput, limit: Int, nextToken: String): ModelCustomersConnection @aws_api_key @aws_iam
}

input ModelReservationsConditionInput {
  customersID: ModelIDInput
  pickup_date: ModelStringInput
  return_date: ModelStringInput
  pickup_location: ModelStringInput
  status: ModelStringInput
  car: ModelStringInput
  price: ModelFloatInput
  deposit: ModelFloatInput
  and: [ModelReservationsConditionInput]
  or: [ModelReservationsConditionInput]
  not: ModelReservationsConditionInput
}

input CreateReservationsInput {
  id: ID
  customersID: ID!
  pickup_date: AWSDate
  return_date: AWSDate
  pickup_location: String
  status: String
  car: String
  price: Float
  deposit: Float
}

input UpdateReservationsInput {
  id: ID!
  customersID: ID
  pickup_date: AWSDate
  return_date: AWSDate
  pickup_location: String
  status: String
  car: String
  price: Float
  deposit: Float
}

input DeleteReservationsInput {
  id: ID!
}

type Mutation {
  deleteCandidate(input: DeleteCandidateInput!, condition: ModelCandidateConditionInput): Candidate
  createReservations(input: CreateReservationsInput!, condition: ModelReservationsConditionInput): Reservations @aws_api_key @aws_iam
  updateReservations(input: UpdateReservationsInput!, condition: ModelReservationsConditionInput): Reservations @aws_api_key @aws_iam
  deleteReservations(input: DeleteReservationsInput!, condition: ModelReservationsConditionInput): Reservations @aws_api_key @aws_iam
  createCandidate(input: CreateCandidateInput!, condition: ModelCandidateConditionInput): Candidate @aws_api_key @aws_iam
  updateCandidate(input: UpdateCandidateInput!, condition: ModelCandidateConditionInput): Candidate @aws_api_key @aws_iam
  createToDo(input: CreateToDoInput!, condition: ModelToDoConditionInput): ToDo @aws_api_key @aws_iam
  updateToDo(input: UpdateToDoInput!, condition: ModelToDoConditionInput): ToDo @aws_api_key @aws_iam
  deleteToDo(input: DeleteToDoInput!, condition: ModelToDoConditionInput): ToDo @aws_api_key @aws_iam
  createFees(input: CreateFeesInput!, condition: ModelFeesConditionInput): Fees @aws_api_key @aws_iam
  updateFees(input: UpdateFeesInput!, condition: ModelFeesConditionInput): Fees @aws_api_key @aws_iam
  deleteFees(input: DeleteFeesInput!, condition: ModelFeesConditionInput): Fees @aws_api_key @aws_iam
  createPrices(input: CreatePricesInput!, condition: ModelPricesConditionInput): Prices @aws_api_key @aws_iam
  updatePrices(input: UpdatePricesInput!, condition: ModelPricesConditionInput): Prices @aws_api_key @aws_iam
  deletePrices(input: DeletePricesInput!, condition: ModelPricesConditionInput): Prices @aws_api_key @aws_iam
  createInsurancePackages(input: CreateInsurancePackagesInput!, condition: ModelInsurancePackagesConditionInput): InsurancePackages @aws_api_key @aws_iam
  updateInsurancePackages(input: UpdateInsurancePackagesInput!, condition: ModelInsurancePackagesConditionInput): InsurancePackages @aws_api_key @aws_iam
  deleteInsurancePackages(input: DeleteInsurancePackagesInput!, condition: ModelInsurancePackagesConditionInput): InsurancePackages @aws_api_key @aws_iam
  createKMPackages(input: CreateKMPackagesInput!, condition: ModelKMPackagesConditionInput): KMPackages @aws_api_key @aws_iam
  updateKMPackages(input: UpdateKMPackagesInput!, condition: ModelKMPackagesConditionInput): KMPackages @aws_api_key @aws_iam
  deleteKMPackages(input: DeleteKMPackagesInput!, condition: ModelKMPackagesConditionInput): KMPackages @aws_api_key @aws_iam
  createClasses(input: CreateClassesInput!, condition: ModelClassesConditionInput): Classes @aws_api_key @aws_iam
  updateClasses(input: UpdateClassesInput!, condition: ModelClassesConditionInput): Classes @aws_api_key @aws_iam
  deleteClasses(input: DeleteClassesInput!, condition: ModelClassesConditionInput): Classes @aws_api_key @aws_iam
  createSuppliers(input: CreateSuppliersInput!, condition: ModelSuppliersConditionInput): Suppliers @aws_api_key @aws_iam
  updateSuppliers(input: UpdateSuppliersInput!, condition: ModelSuppliersConditionInput): Suppliers @aws_api_key @aws_iam
  deleteSuppliers(input: DeleteSuppliersInput!, condition: ModelSuppliersConditionInput): Suppliers @aws_api_key @aws_iam
  createCars(input: CreateCarsInput!, condition: ModelCarsConditionInput): Cars @aws_api_key @aws_iam
  updateCars(input: UpdateCarsInput!, condition: ModelCarsConditionInput): Cars @aws_api_key @aws_iam
  deleteCars(input: DeleteCarsInput!, condition: ModelCarsConditionInput): Cars @aws_api_key @aws_iam
  createDocuments(input: CreateDocumentsInput!, condition: ModelDocumentsConditionInput): Documents @aws_api_key @aws_iam
  updateDocuments(input: UpdateDocumentsInput!, condition: ModelDocumentsConditionInput): Documents @aws_api_key @aws_iam
  deleteDocuments(input: DeleteDocumentsInput!, condition: ModelDocumentsConditionInput): Documents @aws_api_key @aws_iam
  createAddresses(input: CreateAddressesInput!, condition: ModelAddressesConditionInput): Addresses @aws_api_key @aws_iam
  updateAddresses(input: UpdateAddressesInput!, condition: ModelAddressesConditionInput): Addresses @aws_api_key @aws_iam
  deleteAddresses(input: DeleteAddressesInput!, condition: ModelAddressesConditionInput): Addresses @aws_api_key @aws_iam
  createCustomers(input: CreateCustomersInput!, condition: ModelCustomersConditionInput): Customers @aws_api_key @aws_iam
  updateCustomers(input: UpdateCustomersInput!, condition: ModelCustomersConditionInput): Customers @aws_api_key @aws_iam
  deleteCustomers(input: DeleteCustomersInput!, condition: ModelCustomersConditionInput): Customers @aws_api_key @aws_iam
}

input ModelSubscriptionReservationsFilterInput {
  id: ModelSubscriptionIDInput
  customersID: ModelSubscriptionIDInput
  pickup_date: ModelSubscriptionStringInput
  return_date: ModelSubscriptionStringInput
  pickup_location: ModelSubscriptionStringInput
  status: ModelSubscriptionStringInput
  car: ModelSubscriptionStringInput
  price: ModelSubscriptionFloatInput
  deposit: ModelSubscriptionFloatInput
  and: [ModelSubscriptionReservationsFilterInput]
  or: [ModelSubscriptionReservationsFilterInput]
}

type Subscription {
  onCreateCandidate(filter: ModelSubscriptionCandidateFilterInput): Candidate @aws_subscribe(mutations: ["createCandidate"])
  onUpdateCandidate(filter: ModelSubscriptionCandidateFilterInput): Candidate @aws_subscribe(mutations: ["updateCandidate"])
  onDeleteCandidate(filter: ModelSubscriptionCandidateFilterInput): Candidate @aws_subscribe(mutations: ["deleteCandidate"])
  onCreateReservations(filter: ModelSubscriptionReservationsFilterInput): Reservations @aws_subscribe(mutations: ["createReservations"]) @aws_api_key @aws_iam
  onUpdateReservations(filter: ModelSubscriptionReservationsFilterInput): Reservations @aws_subscribe(mutations: ["updateReservations"]) @aws_api_key @aws_iam
  onDeleteReservations(filter: ModelSubscriptionReservationsFilterInput): Reservations @aws_subscribe(mutations: ["deleteReservations"]) @aws_api_key @aws_iam
  onCreateToDo(filter: ModelSubscriptionToDoFilterInput): ToDo @aws_subscribe(mutations: ["createToDo"]) @aws_api_key @aws_iam
  onUpdateToDo(filter: ModelSubscriptionToDoFilterInput): ToDo @aws_subscribe(mutations: ["updateToDo"]) @aws_api_key @aws_iam
  onDeleteToDo(filter: ModelSubscriptionToDoFilterInput): ToDo @aws_subscribe(mutations: ["deleteToDo"]) @aws_api_key @aws_iam
  onCreateFees(filter: ModelSubscriptionFeesFilterInput): Fees @aws_subscribe(mutations: ["createFees"]) @aws_api_key @aws_iam
  onUpdateFees(filter: ModelSubscriptionFeesFilterInput): Fees @aws_subscribe(mutations: ["updateFees"]) @aws_api_key @aws_iam
  onDeleteFees(filter: ModelSubscriptionFeesFilterInput): Fees @aws_subscribe(mutations: ["deleteFees"]) @aws_api_key @aws_iam
  onCreatePrices(filter: ModelSubscriptionPricesFilterInput): Prices @aws_subscribe(mutations: ["createPrices"]) @aws_api_key @aws_iam
  onUpdatePrices(filter: ModelSubscriptionPricesFilterInput): Prices @aws_subscribe(mutations: ["updatePrices"]) @aws_api_key @aws_iam
  onDeletePrices(filter: ModelSubscriptionPricesFilterInput): Prices @aws_subscribe(mutations: ["deletePrices"]) @aws_api_key @aws_iam
  onCreateInsurancePackages(filter: ModelSubscriptionInsurancePackagesFilterInput): InsurancePackages @aws_subscribe(mutations: ["createInsurancePackages"]) @aws_api_key @aws_iam
  onUpdateInsurancePackages(filter: ModelSubscriptionInsurancePackagesFilterInput): InsurancePackages @aws_subscribe(mutations: ["updateInsurancePackages"]) @aws_api_key @aws_iam
  onDeleteInsurancePackages(filter: ModelSubscriptionInsurancePackagesFilterInput): InsurancePackages @aws_subscribe(mutations: ["deleteInsurancePackages"]) @aws_api_key @aws_iam
  onCreateKMPackages(filter: ModelSubscriptionKMPackagesFilterInput): KMPackages @aws_subscribe(mutations: ["createKMPackages"]) @aws_api_key @aws_iam
  onUpdateKMPackages(filter: ModelSubscriptionKMPackagesFilterInput): KMPackages @aws_subscribe(mutations: ["updateKMPackages"]) @aws_api_key @aws_iam
  onDeleteKMPackages(filter: ModelSubscriptionKMPackagesFilterInput): KMPackages @aws_subscribe(mutations: ["deleteKMPackages"]) @aws_api_key @aws_iam
  onCreateClasses(filter: ModelSubscriptionClassesFilterInput): Classes @aws_subscribe(mutations: ["createClasses"]) @aws_api_key @aws_iam
  onUpdateClasses(filter: ModelSubscriptionClassesFilterInput): Classes @aws_subscribe(mutations: ["updateClasses"]) @aws_api_key @aws_iam
  onDeleteClasses(filter: ModelSubscriptionClassesFilterInput): Classes @aws_subscribe(mutations: ["deleteClasses"]) @aws_api_key @aws_iam
  onCreateSuppliers(filter: ModelSubscriptionSuppliersFilterInput): Suppliers @aws_subscribe(mutations: ["createSuppliers"]) @aws_api_key @aws_iam
  onUpdateSuppliers(filter: ModelSubscriptionSuppliersFilterInput): Suppliers @aws_subscribe(mutations: ["updateSuppliers"]) @aws_api_key @aws_iam
  onDeleteSuppliers(filter: ModelSubscriptionSuppliersFilterInput): Suppliers @aws_subscribe(mutations: ["deleteSuppliers"]) @aws_api_key @aws_iam
  onCreateCars(filter: ModelSubscriptionCarsFilterInput): Cars @aws_subscribe(mutations: ["createCars"]) @aws_api_key @aws_iam
  onUpdateCars(filter: ModelSubscriptionCarsFilterInput): Cars @aws_subscribe(mutations: ["updateCars"]) @aws_api_key @aws_iam
  onDeleteCars(filter: ModelSubscriptionCarsFilterInput): Cars @aws_subscribe(mutations: ["deleteCars"]) @aws_api_key @aws_iam
  onCreateDocuments(filter: ModelSubscriptionDocumentsFilterInput): Documents @aws_subscribe(mutations: ["createDocuments"]) @aws_api_key @aws_iam
  onUpdateDocuments(filter: ModelSubscriptionDocumentsFilterInput): Documents @aws_subscribe(mutations: ["updateDocuments"]) @aws_api_key @aws_iam
  onDeleteDocuments(filter: ModelSubscriptionDocumentsFilterInput): Documents @aws_subscribe(mutations: ["deleteDocuments"]) @aws_api_key @aws_iam
  onCreateAddresses(filter: ModelSubscriptionAddressesFilterInput): Addresses @aws_subscribe(mutations: ["createAddresses"]) @aws_api_key @aws_iam
  onUpdateAddresses(filter: ModelSubscriptionAddressesFilterInput): Addresses @aws_subscribe(mutations: ["updateAddresses"]) @aws_api_key @aws_iam
  onDeleteAddresses(filter: ModelSubscriptionAddressesFilterInput): Addresses @aws_subscribe(mutations: ["deleteAddresses"]) @aws_api_key @aws_iam
  onCreateCustomers(filter: ModelSubscriptionCustomersFilterInput): Customers @aws_subscribe(mutations: ["createCustomers"]) @aws_api_key @aws_iam
  onUpdateCustomers(filter: ModelSubscriptionCustomersFilterInput): Customers @aws_subscribe(mutations: ["updateCustomers"]) @aws_api_key @aws_iam
  onDeleteCustomers(filter: ModelSubscriptionCustomersFilterInput): Customers @aws_subscribe(mutations: ["deleteCustomers"]) @aws_api_key @aws_iam
}

type ModelCandidateConnection {
  items: [Candidate]!
  nextToken: String
}

input ModelCandidateFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  email: ModelStringInput
  and: [ModelCandidateFilterInput]
  or: [ModelCandidateFilterInput]
  not: ModelCandidateFilterInput
}

input ModelCandidateConditionInput {
  name: ModelStringInput
  email: ModelStringInput
  and: [ModelCandidateConditionInput]
  or: [ModelCandidateConditionInput]
  not: ModelCandidateConditionInput
}

input CreateCandidateInput {
  id: ID
  name: String!
  email: AWSEmail!
}

input UpdateCandidateInput {
  id: ID!
  name: String
  email: AWSEmail
}

input DeleteCandidateInput {
  id: ID!
}

input ModelSubscriptionCandidateFilterInput {
  id: ModelSubscriptionIDInput
  name: ModelSubscriptionStringInput
  email: ModelSubscriptionStringInput
  and: [ModelSubscriptionCandidateFilterInput]
  or: [ModelSubscriptionCandidateFilterInput]
}

type ModelToDoConnection @aws_api_key @aws_iam {
  items: [ToDo]!
  nextToken: String
}

input ModelToDoFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  description: ModelStringInput
  and: [ModelToDoFilterInput]
  or: [ModelToDoFilterInput]
  not: ModelToDoFilterInput
}

input ModelToDoConditionInput {
  name: ModelStringInput
  description: ModelStringInput
  and: [ModelToDoConditionInput]
  or: [ModelToDoConditionInput]
  not: ModelToDoConditionInput
}

input CreateToDoInput {
  id: ID
  name: String
  description: String
}

input UpdateToDoInput {
  id: ID!
  name: String
  description: String
}

input DeleteToDoInput {
  id: ID!
}

input ModelSubscriptionToDoFilterInput {
  id: ModelSubscriptionIDInput
  name: ModelSubscriptionStringInput
  description: ModelSubscriptionStringInput
  and: [ModelSubscriptionToDoFilterInput]
  or: [ModelSubscriptionToDoFilterInput]
}

type ModelFeesConnection @aws_api_key @aws_iam {
  items: [Fees]!
  nextToken: String
}

input ModelFeesFilterInput {
  id: ModelIDInput
  deposit: ModelFloatInput
  carsID: ModelIDInput
  and: [ModelFeesFilterInput]
  or: [ModelFeesFilterInput]
  not: ModelFeesFilterInput
}

input ModelFeesConditionInput {
  deposit: ModelFloatInput
  carsID: ModelIDInput
  and: [ModelFeesConditionInput]
  or: [ModelFeesConditionInput]
  not: ModelFeesConditionInput
}

input CreateFeesInput {
  id: ID
  deposit: Float
  carsID: ID!
}

input UpdateFeesInput {
  id: ID!
  deposit: Float
  carsID: ID
}

input DeleteFeesInput {
  id: ID!
}

input ModelSubscriptionFeesFilterInput {
  id: ModelSubscriptionIDInput
  deposit: ModelSubscriptionFloatInput
  carsID: ModelSubscriptionIDInput
  and: [ModelSubscriptionFeesFilterInput]
  or: [ModelSubscriptionFeesFilterInput]
}

type ModelPricesConnection @aws_api_key @aws_iam {
  items: [Prices]!
  nextToken: String
}

input ModelPricesFilterInput {
  id: ModelIDInput
  rate_1: ModelFloatInput
  rate_3: ModelFloatInput
  rate_6: ModelFloatInput
  rate_12: ModelFloatInput
  rate_18: ModelFloatInput
  rate_24: ModelFloatInput
  carsID: ModelIDInput
  and: [ModelPricesFilterInput]
  or: [ModelPricesFilterInput]
  not: ModelPricesFilterInput
}

input ModelPricesConditionInput {
  rate_1: ModelFloatInput
  rate_3: ModelFloatInput
  rate_6: ModelFloatInput
  rate_12: ModelFloatInput
  rate_18: ModelFloatInput
  rate_24: ModelFloatInput
  carsID: ModelIDInput
  and: [ModelPricesConditionInput]
  or: [ModelPricesConditionInput]
  not: ModelPricesConditionInput
}

input CreatePricesInput {
  id: ID
  rate_1: Float
  rate_3: Float
  rate_6: Float
  rate_12: Float
  rate_18: Float
  rate_24: Float
  carsID: ID!
}

input UpdatePricesInput {
  id: ID!
  rate_1: Float
  rate_3: Float
  rate_6: Float
  rate_12: Float
  rate_18: Float
  rate_24: Float
  carsID: ID
}

input DeletePricesInput {
  id: ID!
}

input ModelSubscriptionPricesFilterInput {
  id: ModelSubscriptionIDInput
  rate_1: ModelSubscriptionFloatInput
  rate_3: ModelSubscriptionFloatInput
  rate_6: ModelSubscriptionFloatInput
  rate_12: ModelSubscriptionFloatInput
  rate_18: ModelSubscriptionFloatInput
  rate_24: ModelSubscriptionFloatInput
  carsID: ModelSubscriptionIDInput
  and: [ModelSubscriptionPricesFilterInput]
  or: [ModelSubscriptionPricesFilterInput]
}

type ModelInsurancePackagesConnection @aws_api_key @aws_iam {
  items: [InsurancePackages]!
  nextToken: String
}

input ModelInsurancePackagesFilterInput {
  id: ModelIDInput
  description: ModelStringInput
  carsID: ModelIDInput
  and: [ModelInsurancePackagesFilterInput]
  or: [ModelInsurancePackagesFilterInput]
  not: ModelInsurancePackagesFilterInput
}

input ModelInsurancePackagesConditionInput {
  description: ModelStringInput
  carsID: ModelIDInput
  and: [ModelInsurancePackagesConditionInput]
  or: [ModelInsurancePackagesConditionInput]
  not: ModelInsurancePackagesConditionInput
}

input CreateInsurancePackagesInput {
  id: ID
  description: String
  carsID: ID!
}

input UpdateInsurancePackagesInput {
  id: ID!
  description: String
  carsID: ID
}

input DeleteInsurancePackagesInput {
  id: ID!
}

input ModelSubscriptionInsurancePackagesFilterInput {
  id: ModelSubscriptionIDInput
  description: ModelSubscriptionStringInput
  carsID: ModelSubscriptionIDInput
  and: [ModelSubscriptionInsurancePackagesFilterInput]
  or: [ModelSubscriptionInsurancePackagesFilterInput]
}

type ModelKMPackagesConnection @aws_api_key @aws_iam {
  items: [KMPackages]!
  nextToken: String
}

input ModelKMPackagesFilterInput {
  id: ModelIDInput
  description: ModelIntInput
  carsID: ModelIDInput
  and: [ModelKMPackagesFilterInput]
  or: [ModelKMPackagesFilterInput]
  not: ModelKMPackagesFilterInput
}

input ModelKMPackagesConditionInput {
  description: ModelIntInput
  carsID: ModelIDInput
  and: [ModelKMPackagesConditionInput]
  or: [ModelKMPackagesConditionInput]
  not: ModelKMPackagesConditionInput
}

input CreateKMPackagesInput {
  id: ID
  description: Int
  carsID: ID!
}

input UpdateKMPackagesInput {
  id: ID!
  description: Int
  carsID: ID
}

input DeleteKMPackagesInput {
  id: ID!
}

input ModelSubscriptionKMPackagesFilterInput {
  id: ModelSubscriptionIDInput
  description: ModelSubscriptionIntInput
  carsID: ModelSubscriptionIDInput
  and: [ModelSubscriptionKMPackagesFilterInput]
  or: [ModelSubscriptionKMPackagesFilterInput]
}

type ModelClassesConnection @aws_api_key @aws_iam {
  items: [Classes]!
  nextToken: String
}

input ModelClassesFilterInput {
  id: ModelIDInput
  description: ModelStringInput
  suppliersID: ModelIDInput
  and: [ModelClassesFilterInput]
  or: [ModelClassesFilterInput]
  not: ModelClassesFilterInput
}

input ModelClassesConditionInput {
  description: ModelStringInput
  suppliersID: ModelIDInput
  and: [ModelClassesConditionInput]
  or: [ModelClassesConditionInput]
  not: ModelClassesConditionInput
}

input CreateClassesInput {
  id: ID
  description: String
  suppliersID: ID!
}

input UpdateClassesInput {
  id: ID!
  description: String
  suppliersID: ID
}

input DeleteClassesInput {
  id: ID!
}

input ModelSubscriptionClassesFilterInput {
  id: ModelSubscriptionIDInput
  description: ModelSubscriptionStringInput
  suppliersID: ModelSubscriptionIDInput
  and: [ModelSubscriptionClassesFilterInput]
  or: [ModelSubscriptionClassesFilterInput]
}

type ModelSuppliersConnection @aws_api_key @aws_iam {
  items: [Suppliers]!
  nextToken: String
}

input ModelSuppliersFilterInput {
  id: ModelIDInput
  description: ModelStringInput
  and: [ModelSuppliersFilterInput]
  or: [ModelSuppliersFilterInput]
  not: ModelSuppliersFilterInput
}

input ModelSuppliersConditionInput {
  description: ModelStringInput
  and: [ModelSuppliersConditionInput]
  or: [ModelSuppliersConditionInput]
  not: ModelSuppliersConditionInput
}

input CreateSuppliersInput {
  id: ID
  description: String
}

input UpdateSuppliersInput {
  id: ID!
  description: String
}

input DeleteSuppliersInput {
  id: ID!
}

input ModelSubscriptionSuppliersFilterInput {
  id: ModelSubscriptionIDInput
  description: ModelSubscriptionStringInput
  and: [ModelSubscriptionSuppliersFilterInput]
  or: [ModelSubscriptionSuppliersFilterInput]
}

type ModelCarsConnection @aws_api_key @aws_iam {
  items: [Cars]!
  nextToken: String
}

input ModelTransmissionEnumInput {
  eq: TransmissionEnum
  ne: TransmissionEnum
}

input ModelFuelEnumInput {
  eq: FuelEnum
  ne: FuelEnum
}

input ModelCarsFilterInput {
  id: ModelIDInput
  Make: ModelStringInput
  Model: ModelStringInput
  Variant: ModelStringInput
  Year: ModelStringInput
  Transmission: ModelTransmissionEnumInput
  Fuel: ModelFuelEnumInput
  Seats: ModelIntInput
  and: [ModelCarsFilterInput]
  or: [ModelCarsFilterInput]
  not: ModelCarsFilterInput
  carsCarsClassesId: ModelIDInput
}

input ModelCarsConditionInput {
  Make: ModelStringInput
  Model: ModelStringInput
  Variant: ModelStringInput
  Year: ModelStringInput
  Transmission: ModelTransmissionEnumInput
  Fuel: ModelFuelEnumInput
  Seats: ModelIntInput
  and: [ModelCarsConditionInput]
  or: [ModelCarsConditionInput]
  not: ModelCarsConditionInput
  carsCarsClassesId: ModelIDInput
}

input CreateCarsInput {
  id: ID
  Make: String
  Model: String
  Variant: String
  Year: String
  Transmission: TransmissionEnum
  Fuel: FuelEnum
  Seats: Int
  carsCarsClassesId: ID
}

input UpdateCarsInput {
  id: ID!
  Make: String
  Model: String
  Variant: String
  Year: String
  Transmission: TransmissionEnum
  Fuel: FuelEnum
  Seats: Int
  carsCarsClassesId: ID
}

input DeleteCarsInput {
  id: ID!
}

input ModelSubscriptionCarsFilterInput {
  id: ModelSubscriptionIDInput
  Make: ModelSubscriptionStringInput
  Model: ModelSubscriptionStringInput
  Variant: ModelSubscriptionStringInput
  Year: ModelSubscriptionStringInput
  Transmission: ModelSubscriptionStringInput
  Fuel: ModelSubscriptionStringInput
  Seats: ModelSubscriptionIntInput
  and: [ModelSubscriptionCarsFilterInput]
  or: [ModelSubscriptionCarsFilterInput]
}

type ModelDocumentsConnection @aws_api_key @aws_iam {
  items: [Documents]!
  nextToken: String
}

input ModelDocumentTypeEnumInput {
  eq: DocumentTypeEnum
  ne: DocumentTypeEnum
}

input ModelDocumentsFilterInput {
  id: ModelIDInput
  file_name: ModelStringInput
  document_type: ModelDocumentTypeEnumInput
  customersID: ModelIDInput
  and: [ModelDocumentsFilterInput]
  or: [ModelDocumentsFilterInput]
  not: ModelDocumentsFilterInput
}

input ModelDocumentsConditionInput {
  file_name: ModelStringInput
  document_type: ModelDocumentTypeEnumInput
  customersID: ModelIDInput
  and: [ModelDocumentsConditionInput]
  or: [ModelDocumentsConditionInput]
  not: ModelDocumentsConditionInput
}

input CreateDocumentsInput {
  id: ID
  file_name: String
  document_type: DocumentTypeEnum
  customersID: ID!
}

input UpdateDocumentsInput {
  id: ID!
  file_name: String
  document_type: DocumentTypeEnum
  customersID: ID
}

input DeleteDocumentsInput {
  id: ID!
}

input ModelSubscriptionDocumentsFilterInput {
  id: ModelSubscriptionIDInput
  file_name: ModelSubscriptionStringInput
  document_type: ModelSubscriptionStringInput
  customersID: ModelSubscriptionIDInput
  and: [ModelSubscriptionDocumentsFilterInput]
  or: [ModelSubscriptionDocumentsFilterInput]
}

type ModelAddressesConnection @aws_api_key @aws_iam {
  items: [Addresses]!
  nextToken: String
}

input ModelProvincesEnumInput {
  eq: ProvincesEnum
  ne: ProvincesEnum
}

input ModelAddressesFilterInput {
  id: ModelIDInput
  street1: ModelStringInput
  street2: ModelStringInput
  city: ModelStringInput
  suburb: ModelStringInput
  province: ModelProvincesEnumInput
  and: [ModelAddressesFilterInput]
  or: [ModelAddressesFilterInput]
  not: ModelAddressesFilterInput
}

input ModelAddressesConditionInput {
  street1: ModelStringInput
  street2: ModelStringInput
  city: ModelStringInput
  suburb: ModelStringInput
  province: ModelProvincesEnumInput
  and: [ModelAddressesConditionInput]
  or: [ModelAddressesConditionInput]
  not: ModelAddressesConditionInput
}

input CreateAddressesInput {
  id: ID
  street1: String
  street2: String
  city: String
  suburb: String
  province: ProvincesEnum
}

input UpdateAddressesInput {
  id: ID!
  street1: String
  street2: String
  city: String
  suburb: String
  province: ProvincesEnum
}

input DeleteAddressesInput {
  id: ID!
}

input ModelSubscriptionAddressesFilterInput {
  id: ModelSubscriptionIDInput
  street1: ModelSubscriptionStringInput
  street2: ModelSubscriptionStringInput
  city: ModelSubscriptionStringInput
  suburb: ModelSubscriptionStringInput
  province: ModelSubscriptionStringInput
  and: [ModelSubscriptionAddressesFilterInput]
  or: [ModelSubscriptionAddressesFilterInput]
}

type ModelCustomersConnection @aws_api_key @aws_iam {
  items: [Customers]!
  nextToken: String
}

input ModelStatusEnumInput {
  eq: StatusEnum
  ne: StatusEnum
}

input ModelCustomersFilterInput {
  id: ModelIDInput
  first_name: ModelStringInput
  last_name: ModelStringInput
  email: ModelStringInput
  phone: ModelIntInput
  id_number: ModelStringInput
  drivers_licence: ModelStringInput
  salary: ModelFloatInput
  status: ModelStatusEnumInput
  comments: ModelStringInput
  and: [ModelCustomersFilterInput]
  or: [ModelCustomersFilterInput]
  not: ModelCustomersFilterInput
  customersCustomersAddressesId: ModelIDInput
}

input ModelCustomersConditionInput {
  first_name: ModelStringInput
  last_name: ModelStringInput
  email: ModelStringInput
  phone: ModelIntInput
  id_number: ModelStringInput
  drivers_licence: ModelStringInput
  salary: ModelFloatInput
  status: ModelStatusEnumInput
  comments: ModelStringInput
  and: [ModelCustomersConditionInput]
  or: [ModelCustomersConditionInput]
  not: ModelCustomersConditionInput
  customersCustomersAddressesId: ModelIDInput
}

input CreateCustomersInput {
  id: ID
  first_name: String
  last_name: String
  email: AWSEmail
  phone: Int
  id_number: String
  drivers_licence: String
  salary: Float
  status: StatusEnum
  comments: String
  customersCustomersAddressesId: ID
}

input UpdateCustomersInput {
  id: ID!
  first_name: String
  last_name: String
  email: AWSEmail
  phone: Int
  id_number: String
  drivers_licence: String
  salary: Float
  status: StatusEnum
  comments: String
  customersCustomersAddressesId: ID
}

input DeleteCustomersInput {
  id: ID!
}

input ModelSubscriptionCustomersFilterInput {
  id: ModelSubscriptionIDInput
  first_name: ModelSubscriptionStringInput
  last_name: ModelSubscriptionStringInput
  email: ModelSubscriptionStringInput
  phone: ModelSubscriptionIntInput
  id_number: ModelSubscriptionStringInput
  drivers_licence: ModelSubscriptionStringInput
  salary: ModelSubscriptionFloatInput
  status: ModelSubscriptionStringInput
  comments: ModelSubscriptionStringInput
  and: [ModelSubscriptionCustomersFilterInput]
  or: [ModelSubscriptionCustomersFilterInput]
}

